<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper 파일 만드는 방법을 반드시 똑바로 숙지. -->
<!-- id값은 매서드명과 같게 작성. -->
<mapper namespace="com.yedam.emp.service.impl.EmpMapper">
	<!-- 전제 record 건수조회 -->
	<select id="getCount" resultType="int"> <!-- 결과값이 컬럼하나라면 이렇게도 가능. -->
		SELECT COUNT(*) FROM EMPLOYEES
		<where>
			<if test="department_id != null and department_id != ''">
				DEPARTMENT_ID = #{department_id}
			</if>
			<if test="job_id != null and job_id != ''">
				AND JOB_ID = #{job_id}
			</if>
			<if test="first_name != null and first_name != ''">
				AND UPPER(FIRST_NAME) LIKE '%'||UPPER(#{first_name})||'%'
			</if>
		</where>
	</select>
	
	
	<!-- insert, update, delete의 경우 반드시 parameterType을 넣어야한다 . -->
	<insert id="insertEmp" parameterType="emp">
		INSERT INTO EMPLOYEES  (EMPLOYEE_ID, 
								FIRST_NAME, 
								LAST_NAME, 
								EMAIL, 
								PHONE_NUMBER, 
								HIRE_DATE ,
								JOB_ID, 
 								DEPARTMENT_ID, 
	<if test="manager_id !=null">MANAGER_ID</if> )
								VALUES( #{employee_id}, 
										#{first_name},
										#{last_name},
										#{email},
										#{phone_number} ,
		 								#{hire_date}, 
			 							#{job_id}, 
	   									#{department_id}, 
		    <if test="manager_id !=null">#{manager_id}</if> 	)
		    
	</insert>
	
	<update id="updateEmp" parameterType="emp">
		UPDATE EMPLOYEES 
		<set> 	
		<if test="first_name !=null">FIRST_NAME=#{first_name}, </if>
		<if test="last_name !=null">LAST_NAME=#{last_name}, </if>
		<if test="email !=null">EMAIL=#{email}, </if>
		<if test="phone_number !=null">PHONE_NUMBER=#{phone_number}, </if>
		<if test="hire_date !=null">HIRE_DATE=#{hire_date}, </if>
		<if test="job_id !=null">JOB_ID=#{job_id}, </if>
		<if test="department_id !=null">DEPARTMENT_ID=#{department_id}, </if>
		<if test="manager_id !=null">MANAGER_ID=#{manager_id} </if>
		</set>
								WHERE EMPLOYEE_ID = #{employee_id} 
	</update>
	
	<delete id="deleteEmp" parameterType="emp">
		DELETE FROM EMPLOYEES WHERE EMPLOYEE_ID= #{employee_id} 
	</delete>
	
	<!-- select 일 경우 반드시 resultType을 넣어주어야한다.  -->
	<select id="getSearchEmp" parameterType="empSearchVO" resultType="emp">
	SELECT B.* FROM  (    SELECT ROWNUM RN,   A.*  FROM ( 
		SELECT 	e.EMPLOYEE_ID,
				e.FIRST_NAME,
				e.LAST_NAME,
				e.EMAIL,
				e.PHONE_NUMBER,
				e.HIRE_DATE,
				e.JOB_ID,
				e.SALARY,
				e.COMMISSION_PCT,
				e.MANAGER_ID,
				e.DEPARTMENT_ID,
				d.department_name,
				j.job_title 
				FROM EMPLOYEES e join DEPARTMENTS d
				on e.DEPARTMENT_ID= d.DEPARTMENT_ID 
				join JOBS j
				on e.JOB_ID= j.JOB_ID
		<where>
			<if test="department_id != null and department_id != ''">
				e.DEPARTMENT_ID = #{department_id}
			</if>
			<if test="job_id!= null and job_id != '' ">
				AND e.JOB_ID = #{job_id}
			</if>
			<if test="first_name != null and first_name != ''">
				AND UPPER(e.FIRST_NAME) LIKE '%'||UPPER(#{first_name})||'%'
			</if>
		</where>
				ORDER BY e.EMPLOYEE_ID
		) A    )  B     WHERE RN BETWEEN #{start} AND #{end} 
	</select>
	
	<select id="getEmp" parameterType="emp" 
	resultType="emp">
		SELECT EMPLOYEE_ID,
				FIRST_NAME,
				LAST_NAME,
				EMAIL,
				PHONE_NUMBER,
				HIRE_DATE,
				JOB_ID,
				SALARY,
				COMMISSION_PCT,
				MANAGER_ID,
				DEPARTMENT_ID 
				FROM EMPLOYEES 
				WHERE EMPLOYEE_ID=#{employee_id} 
	
	</select>
		<select id="getTest" resultType="emp"> <!-- 결과값이 컬럼하나라면 이렇게도 가능. -->
		select * from test
	</select>
</mapper>